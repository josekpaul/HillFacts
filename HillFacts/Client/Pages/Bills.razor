@page "/RecentBills"
@page "/RecentBills/{CurrentChamberParam}"
@page "/RecentBills/{CurrentChamberParam}/{BillTypeParam}"
@using ProPublicaCongressAPI.Contracts
@inject IAppCacheService CacheService

<h1>Recent @BillType @CurrentChamber Bills</h1>

@if (RecentBills == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="row">
        <div class="col-md-2">
            <select @onchange="BillTypeChanged" class="form-control">
                @foreach (var bt in (RecentBillType[])Enum.GetValues(typeof(RecentBillType)))
                {
                    if (bt == BillType)
                    {
                        <option value="@bt" selected>@bt.ToString()</option>
                    }
                    else
                    {
                        <option value="@bt">@bt.ToString()</option>
                    }
                }
            </select>
        </div>
        <div class="col-md-2">
            <select @onchange="ChamberChanged" class="form-control">
                @if (BoundChamber == Chamber.House)
                {
                    <option value="House" selected>House</option>
                    <option value="Senate">Senate</option>
                }
                else
                {
                    <option value="House">House</option>
                    <option value="Senate" selected>Senate</option>
                }
            </select>
        </div>
        <div class="col-md-6">
            <input @bind="BoundFilter" placeholder="press enter after filter-text" class="form-control" />
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-striped">
            <thead class="thead-dark">
                <tr>
                    <th>#</th>
                    <th>Date</th>
                    <th>Subject</th>
                    <th>Title</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var bill in FilteredBills)
                {
                    <BSCollapseItem>
                        <tr>
                            <td>
                                <BSCollapseToggle>
                                    @(context ? "-":"+")
                                    <a href="@bill.GovTrackUrl" target="_blank">@bill.BillNumber</a>
                                </BSCollapseToggle>

                            </td>
                            <td>
                                @bill.DateIntroduced.ToString("MM/dd/yyyy")

                            </td>
                            <td>
                                @bill.PrimarySubject
                            </td>
                            <td>
                                @bill.BillTitleShort
                            </td>
                        </tr>
                        <tr>
                            <td colspan="4">
                                <BSCollapse>

                                    <h6>@bill.BillTitle</h6>
                                    <p>Sponsor: <a href="/MemberDetail/@bill.SponsorId" target="_blank">@bill.SponsorId</a></p>
                                    <p>@bill.Summary</p>
                                    <p>@bill.Committees</p>
                                    <p>@bill.LatestMajorAction on @bill.DateLatestMajorAction.ToShortDateString()</p>

                                </BSCollapse>

                            </td>

                        </tr>

                    </BSCollapseItem>


                }
            </tbody>
        </table>
    </div>
 
}


@code {
    [Parameter] public string BillTypeParam { get; set; }
    [Parameter] public string CurrentChamberParam { get; set; }
    RecentBillType BillType;
    Chamber CurrentChamber;
    RecentBillsContainer RecentBills;
    IEnumerable<RecentBill> FilteredBills;
    string CurrentFilter = "";

    Chamber BoundChamber
    {
        get { return CurrentChamber; }
        set
        {
            CurrentChamber = value;
        }
    }
    string BoundFilter
    {
        get { return CurrentFilter; }
        set
        {
            CurrentFilter = value;
            FilteredBills = RecentBills.Bills.Where(s => (
            s.PrimarySubject.Contains(CurrentFilter, StringComparison.OrdinalIgnoreCase)
            || s.BillTitle.Contains(CurrentFilter, StringComparison.OrdinalIgnoreCase)
            || s.Summary.Contains(CurrentFilter, StringComparison.OrdinalIgnoreCase)));
        }
    }

    async Task ChamberChanged(ChangeEventArgs args)
    {
        BoundChamber = (Chamber)Enum.Parse(typeof(Chamber), args.Value.ToString());
        await RetrieveRecentBills();
    }

    async Task BillTypeChanged(ChangeEventArgs args)
    {
        BillType = (RecentBillType)Enum.Parse(typeof(RecentBillType), args.Value.ToString());
        await RetrieveRecentBills();
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CurrentChamberParam))
            CurrentChamber = Chamber.Senate;
        else
            CurrentChamber = (Chamber)Enum.Parse(typeof(Chamber), CurrentChamberParam);

        if (string.IsNullOrEmpty(BillTypeParam))
            BillType = RecentBillType.Active;
        else
            BillType = (RecentBillType)Enum.Parse(typeof(RecentBillType), BillTypeParam);

        await RetrieveRecentBills();
    }

    async Task RetrieveRecentBills()
    {
        RecentBills = await CacheService.CallCacheableServerMethod<RecentBillsContainer>($"/api/Propublica/GetBills?chamber={CurrentChamber}&billtype={BillType}");
        FilteredBills = RecentBills.Bills;
    }

}
